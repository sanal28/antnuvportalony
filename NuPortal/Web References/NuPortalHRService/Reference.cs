//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace NuPortal.NuPortalHRService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="NuPortalHRServiceSoap", Namespace="http://tempuri.org/")]
    public partial class NuPortalHRService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback AnnouncementOrEventsOperOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveTrainingOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateTrainingTicketOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDataForCalendarOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveTrainingAssessmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveOfficePollOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveQuestionOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetOptionsForQuestionOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveTbPollResultOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveOptionsPollResultOperationCompleted;
        
        private System.Threading.SendOrPostCallback SavePollPublishTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteOfficePollOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public NuPortalHRService() {
            this.Url = global::NuPortal.Properties.Settings.Default.NuPortal_NuPortalHRService_NuPortalHRService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event AnnouncementOrEventsOperCompletedEventHandler AnnouncementOrEventsOperCompleted;
        
        /// <remarks/>
        public event SaveTrainingCompletedEventHandler SaveTrainingCompleted;
        
        /// <remarks/>
        public event UpdateTrainingTicketCompletedEventHandler UpdateTrainingTicketCompleted;
        
        /// <remarks/>
        public event GetDataForCalendarCompletedEventHandler GetDataForCalendarCompleted;
        
        /// <remarks/>
        public event SaveTrainingAssessmentCompletedEventHandler SaveTrainingAssessmentCompleted;
        
        /// <remarks/>
        public event SaveOfficePollCompletedEventHandler SaveOfficePollCompleted;
        
        /// <remarks/>
        public event SaveQuestionCompletedEventHandler SaveQuestionCompleted;
        
        /// <remarks/>
        public event SetOptionsForQuestionCompletedEventHandler SetOptionsForQuestionCompleted;
        
        /// <remarks/>
        public event SaveTbPollResultCompletedEventHandler SaveTbPollResultCompleted;
        
        /// <remarks/>
        public event SaveOptionsPollResultCompletedEventHandler SaveOptionsPollResultCompleted;
        
        /// <remarks/>
        public event SavePollPublishTypeCompletedEventHandler SavePollPublishTypeCompleted;
        
        /// <remarks/>
        public event DeleteOfficePollCompletedEventHandler DeleteOfficePollCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AnnouncementOrEventsOper", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AnnouncementOrEventsOper(int Id, string Attachments, int createdEmpId, string Description, System.DateTime EndDate, int CompanyId, int ModifiedEmpID, System.DateTime StartDate, int Status, string Title, string StartTime, string EndTime, int Operation) {
            object[] results = this.Invoke("AnnouncementOrEventsOper", new object[] {
                        Id,
                        Attachments,
                        createdEmpId,
                        Description,
                        EndDate,
                        CompanyId,
                        ModifiedEmpID,
                        StartDate,
                        Status,
                        Title,
                        StartTime,
                        EndTime,
                        Operation});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AnnouncementOrEventsOperAsync(int Id, string Attachments, int createdEmpId, string Description, System.DateTime EndDate, int CompanyId, int ModifiedEmpID, System.DateTime StartDate, int Status, string Title, string StartTime, string EndTime, int Operation) {
            this.AnnouncementOrEventsOperAsync(Id, Attachments, createdEmpId, Description, EndDate, CompanyId, ModifiedEmpID, StartDate, Status, Title, StartTime, EndTime, Operation, null);
        }
        
        /// <remarks/>
        public void AnnouncementOrEventsOperAsync(int Id, string Attachments, int createdEmpId, string Description, System.DateTime EndDate, int CompanyId, int ModifiedEmpID, System.DateTime StartDate, int Status, string Title, string StartTime, string EndTime, int Operation, object userState) {
            if ((this.AnnouncementOrEventsOperOperationCompleted == null)) {
                this.AnnouncementOrEventsOperOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAnnouncementOrEventsOperOperationCompleted);
            }
            this.InvokeAsync("AnnouncementOrEventsOper", new object[] {
                        Id,
                        Attachments,
                        createdEmpId,
                        Description,
                        EndDate,
                        CompanyId,
                        ModifiedEmpID,
                        StartDate,
                        Status,
                        Title,
                        StartTime,
                        EndTime,
                        Operation}, this.AnnouncementOrEventsOperOperationCompleted, userState);
        }
        
        private void OnAnnouncementOrEventsOperOperationCompleted(object arg) {
            if ((this.AnnouncementOrEventsOperCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AnnouncementOrEventsOperCompleted(this, new AnnouncementOrEventsOperCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveTraining", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SaveTraining(int Id, string Attachments, int createdEmpId, string Details, System.DateTime EndDate, string EndTime, int CompanyId, int TrainerId, int IsAssessmentSent, int ModifiedEmpID, System.DateTime StartDate, string StartTime, int Status, string Subject, int Operation) {
            object[] results = this.Invoke("SaveTraining", new object[] {
                        Id,
                        Attachments,
                        createdEmpId,
                        Details,
                        EndDate,
                        EndTime,
                        CompanyId,
                        TrainerId,
                        IsAssessmentSent,
                        ModifiedEmpID,
                        StartDate,
                        StartTime,
                        Status,
                        Subject,
                        Operation});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SaveTrainingAsync(int Id, string Attachments, int createdEmpId, string Details, System.DateTime EndDate, string EndTime, int CompanyId, int TrainerId, int IsAssessmentSent, int ModifiedEmpID, System.DateTime StartDate, string StartTime, int Status, string Subject, int Operation) {
            this.SaveTrainingAsync(Id, Attachments, createdEmpId, Details, EndDate, EndTime, CompanyId, TrainerId, IsAssessmentSent, ModifiedEmpID, StartDate, StartTime, Status, Subject, Operation, null);
        }
        
        /// <remarks/>
        public void SaveTrainingAsync(
                    int Id, 
                    string Attachments, 
                    int createdEmpId, 
                    string Details, 
                    System.DateTime EndDate, 
                    string EndTime, 
                    int CompanyId, 
                    int TrainerId, 
                    int IsAssessmentSent, 
                    int ModifiedEmpID, 
                    System.DateTime StartDate, 
                    string StartTime, 
                    int Status, 
                    string Subject, 
                    int Operation, 
                    object userState) {
            if ((this.SaveTrainingOperationCompleted == null)) {
                this.SaveTrainingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveTrainingOperationCompleted);
            }
            this.InvokeAsync("SaveTraining", new object[] {
                        Id,
                        Attachments,
                        createdEmpId,
                        Details,
                        EndDate,
                        EndTime,
                        CompanyId,
                        TrainerId,
                        IsAssessmentSent,
                        ModifiedEmpID,
                        StartDate,
                        StartTime,
                        Status,
                        Subject,
                        Operation}, this.SaveTrainingOperationCompleted, userState);
        }
        
        private void OnSaveTrainingOperationCompleted(object arg) {
            if ((this.SaveTrainingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveTrainingCompleted(this, new SaveTrainingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateTrainingTicket", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateTrainingTicket(int Id, int RespondedBy, int Trainee, int TrainingId, int ModifiedEmpID, int Status, int TicketStatusId, int Operation) {
            object[] results = this.Invoke("UpdateTrainingTicket", new object[] {
                        Id,
                        RespondedBy,
                        Trainee,
                        TrainingId,
                        ModifiedEmpID,
                        Status,
                        TicketStatusId,
                        Operation});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateTrainingTicketAsync(int Id, int RespondedBy, int Trainee, int TrainingId, int ModifiedEmpID, int Status, int TicketStatusId, int Operation) {
            this.UpdateTrainingTicketAsync(Id, RespondedBy, Trainee, TrainingId, ModifiedEmpID, Status, TicketStatusId, Operation, null);
        }
        
        /// <remarks/>
        public void UpdateTrainingTicketAsync(int Id, int RespondedBy, int Trainee, int TrainingId, int ModifiedEmpID, int Status, int TicketStatusId, int Operation, object userState) {
            if ((this.UpdateTrainingTicketOperationCompleted == null)) {
                this.UpdateTrainingTicketOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateTrainingTicketOperationCompleted);
            }
            this.InvokeAsync("UpdateTrainingTicket", new object[] {
                        Id,
                        RespondedBy,
                        Trainee,
                        TrainingId,
                        ModifiedEmpID,
                        Status,
                        TicketStatusId,
                        Operation}, this.UpdateTrainingTicketOperationCompleted, userState);
        }
        
        private void OnUpdateTrainingTicketOperationCompleted(object arg) {
            if ((this.UpdateTrainingTicketCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateTrainingTicketCompleted(this, new UpdateTrainingTicketCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDataForCalendar", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetDataForCalendar(int Id, System.DateTime StartDate, System.DateTime EndDate, int Operation) {
            object[] results = this.Invoke("GetDataForCalendar", new object[] {
                        Id,
                        StartDate,
                        EndDate,
                        Operation});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetDataForCalendarAsync(int Id, System.DateTime StartDate, System.DateTime EndDate, int Operation) {
            this.GetDataForCalendarAsync(Id, StartDate, EndDate, Operation, null);
        }
        
        /// <remarks/>
        public void GetDataForCalendarAsync(int Id, System.DateTime StartDate, System.DateTime EndDate, int Operation, object userState) {
            if ((this.GetDataForCalendarOperationCompleted == null)) {
                this.GetDataForCalendarOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDataForCalendarOperationCompleted);
            }
            this.InvokeAsync("GetDataForCalendar", new object[] {
                        Id,
                        StartDate,
                        EndDate,
                        Operation}, this.GetDataForCalendarOperationCompleted, userState);
        }
        
        private void OnGetDataForCalendarOperationCompleted(object arg) {
            if ((this.GetDataForCalendarCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDataForCalendarCompleted(this, new GetDataForCalendarCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveTrainingAssessment", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SaveTrainingAssessment(int AbilityToCompleteTaskOnTime, int AbilityToLearnNewConcept, int createdEmpId, int AbilityToUnderstandConcept, string AreasOfDevelopment, int AssistanceRequiredDuringCodeBuilding, string Comments, int TrainingTicketId, int Status, int ImplementationOfNewlyLearntConcept) {
            object[] results = this.Invoke("SaveTrainingAssessment", new object[] {
                        AbilityToCompleteTaskOnTime,
                        AbilityToLearnNewConcept,
                        createdEmpId,
                        AbilityToUnderstandConcept,
                        AreasOfDevelopment,
                        AssistanceRequiredDuringCodeBuilding,
                        Comments,
                        TrainingTicketId,
                        Status,
                        ImplementationOfNewlyLearntConcept});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SaveTrainingAssessmentAsync(int AbilityToCompleteTaskOnTime, int AbilityToLearnNewConcept, int createdEmpId, int AbilityToUnderstandConcept, string AreasOfDevelopment, int AssistanceRequiredDuringCodeBuilding, string Comments, int TrainingTicketId, int Status, int ImplementationOfNewlyLearntConcept) {
            this.SaveTrainingAssessmentAsync(AbilityToCompleteTaskOnTime, AbilityToLearnNewConcept, createdEmpId, AbilityToUnderstandConcept, AreasOfDevelopment, AssistanceRequiredDuringCodeBuilding, Comments, TrainingTicketId, Status, ImplementationOfNewlyLearntConcept, null);
        }
        
        /// <remarks/>
        public void SaveTrainingAssessmentAsync(int AbilityToCompleteTaskOnTime, int AbilityToLearnNewConcept, int createdEmpId, int AbilityToUnderstandConcept, string AreasOfDevelopment, int AssistanceRequiredDuringCodeBuilding, string Comments, int TrainingTicketId, int Status, int ImplementationOfNewlyLearntConcept, object userState) {
            if ((this.SaveTrainingAssessmentOperationCompleted == null)) {
                this.SaveTrainingAssessmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveTrainingAssessmentOperationCompleted);
            }
            this.InvokeAsync("SaveTrainingAssessment", new object[] {
                        AbilityToCompleteTaskOnTime,
                        AbilityToLearnNewConcept,
                        createdEmpId,
                        AbilityToUnderstandConcept,
                        AreasOfDevelopment,
                        AssistanceRequiredDuringCodeBuilding,
                        Comments,
                        TrainingTicketId,
                        Status,
                        ImplementationOfNewlyLearntConcept}, this.SaveTrainingAssessmentOperationCompleted, userState);
        }
        
        private void OnSaveTrainingAssessmentOperationCompleted(object arg) {
            if ((this.SaveTrainingAssessmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveTrainingAssessmentCompleted(this, new SaveTrainingAssessmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveOfficePoll", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SaveOfficePoll(string Title, string Note, int CompanyId, string AttachmentPath, int CreatedEmpId, int ModifiedEmpId, System.DateTime EndDate, int IsCancelled, int Status, int Operation) {
            object[] results = this.Invoke("SaveOfficePoll", new object[] {
                        Title,
                        Note,
                        CompanyId,
                        AttachmentPath,
                        CreatedEmpId,
                        ModifiedEmpId,
                        EndDate,
                        IsCancelled,
                        Status,
                        Operation});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SaveOfficePollAsync(string Title, string Note, int CompanyId, string AttachmentPath, int CreatedEmpId, int ModifiedEmpId, System.DateTime EndDate, int IsCancelled, int Status, int Operation) {
            this.SaveOfficePollAsync(Title, Note, CompanyId, AttachmentPath, CreatedEmpId, ModifiedEmpId, EndDate, IsCancelled, Status, Operation, null);
        }
        
        /// <remarks/>
        public void SaveOfficePollAsync(string Title, string Note, int CompanyId, string AttachmentPath, int CreatedEmpId, int ModifiedEmpId, System.DateTime EndDate, int IsCancelled, int Status, int Operation, object userState) {
            if ((this.SaveOfficePollOperationCompleted == null)) {
                this.SaveOfficePollOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveOfficePollOperationCompleted);
            }
            this.InvokeAsync("SaveOfficePoll", new object[] {
                        Title,
                        Note,
                        CompanyId,
                        AttachmentPath,
                        CreatedEmpId,
                        ModifiedEmpId,
                        EndDate,
                        IsCancelled,
                        Status,
                        Operation}, this.SaveOfficePollOperationCompleted, userState);
        }
        
        private void OnSaveOfficePollOperationCompleted(object arg) {
            if ((this.SaveOfficePollCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveOfficePollCompleted(this, new SaveOfficePollCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveQuestion", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SaveQuestion(int PollId, int QuestionTypeId, string Question, int CreatedEmpId, int ModifiedEmpId, int Operation) {
            object[] results = this.Invoke("SaveQuestion", new object[] {
                        PollId,
                        QuestionTypeId,
                        Question,
                        CreatedEmpId,
                        ModifiedEmpId,
                        Operation});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SaveQuestionAsync(int PollId, int QuestionTypeId, string Question, int CreatedEmpId, int ModifiedEmpId, int Operation) {
            this.SaveQuestionAsync(PollId, QuestionTypeId, Question, CreatedEmpId, ModifiedEmpId, Operation, null);
        }
        
        /// <remarks/>
        public void SaveQuestionAsync(int PollId, int QuestionTypeId, string Question, int CreatedEmpId, int ModifiedEmpId, int Operation, object userState) {
            if ((this.SaveQuestionOperationCompleted == null)) {
                this.SaveQuestionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveQuestionOperationCompleted);
            }
            this.InvokeAsync("SaveQuestion", new object[] {
                        PollId,
                        QuestionTypeId,
                        Question,
                        CreatedEmpId,
                        ModifiedEmpId,
                        Operation}, this.SaveQuestionOperationCompleted, userState);
        }
        
        private void OnSaveQuestionOperationCompleted(object arg) {
            if ((this.SaveQuestionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveQuestionCompleted(this, new SaveQuestionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SetOptionsForQuestion", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SetOptionsForQuestion(string jsonOptions) {
            object[] results = this.Invoke("SetOptionsForQuestion", new object[] {
                        jsonOptions});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SetOptionsForQuestionAsync(string jsonOptions) {
            this.SetOptionsForQuestionAsync(jsonOptions, null);
        }
        
        /// <remarks/>
        public void SetOptionsForQuestionAsync(string jsonOptions, object userState) {
            if ((this.SetOptionsForQuestionOperationCompleted == null)) {
                this.SetOptionsForQuestionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetOptionsForQuestionOperationCompleted);
            }
            this.InvokeAsync("SetOptionsForQuestion", new object[] {
                        jsonOptions}, this.SetOptionsForQuestionOperationCompleted, userState);
        }
        
        private void OnSetOptionsForQuestionOperationCompleted(object arg) {
            if ((this.SetOptionsForQuestionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetOptionsForQuestionCompleted(this, new SetOptionsForQuestionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveTbPollResult", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SaveTbPollResult(int QuestionId, string TextValue, int CreatedEmpId, int ModifiedEmpId, int Operation) {
            object[] results = this.Invoke("SaveTbPollResult", new object[] {
                        QuestionId,
                        TextValue,
                        CreatedEmpId,
                        ModifiedEmpId,
                        Operation});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SaveTbPollResultAsync(int QuestionId, string TextValue, int CreatedEmpId, int ModifiedEmpId, int Operation) {
            this.SaveTbPollResultAsync(QuestionId, TextValue, CreatedEmpId, ModifiedEmpId, Operation, null);
        }
        
        /// <remarks/>
        public void SaveTbPollResultAsync(int QuestionId, string TextValue, int CreatedEmpId, int ModifiedEmpId, int Operation, object userState) {
            if ((this.SaveTbPollResultOperationCompleted == null)) {
                this.SaveTbPollResultOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveTbPollResultOperationCompleted);
            }
            this.InvokeAsync("SaveTbPollResult", new object[] {
                        QuestionId,
                        TextValue,
                        CreatedEmpId,
                        ModifiedEmpId,
                        Operation}, this.SaveTbPollResultOperationCompleted, userState);
        }
        
        private void OnSaveTbPollResultOperationCompleted(object arg) {
            if ((this.SaveTbPollResultCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveTbPollResultCompleted(this, new SaveTbPollResultCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveOptionsPollResult", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SaveOptionsPollResult(string jsonOptions) {
            object[] results = this.Invoke("SaveOptionsPollResult", new object[] {
                        jsonOptions});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SaveOptionsPollResultAsync(string jsonOptions) {
            this.SaveOptionsPollResultAsync(jsonOptions, null);
        }
        
        /// <remarks/>
        public void SaveOptionsPollResultAsync(string jsonOptions, object userState) {
            if ((this.SaveOptionsPollResultOperationCompleted == null)) {
                this.SaveOptionsPollResultOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveOptionsPollResultOperationCompleted);
            }
            this.InvokeAsync("SaveOptionsPollResult", new object[] {
                        jsonOptions}, this.SaveOptionsPollResultOperationCompleted, userState);
        }
        
        private void OnSaveOptionsPollResultOperationCompleted(object arg) {
            if ((this.SaveOptionsPollResultCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveOptionsPollResultCompleted(this, new SaveOptionsPollResultCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SavePollPublishType", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SavePollPublishType(int QuestionId, int PublishTypeId, string TextVal, int ModifiedEmpId, int Operation) {
            object[] results = this.Invoke("SavePollPublishType", new object[] {
                        QuestionId,
                        PublishTypeId,
                        TextVal,
                        ModifiedEmpId,
                        Operation});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SavePollPublishTypeAsync(int QuestionId, int PublishTypeId, string TextVal, int ModifiedEmpId, int Operation) {
            this.SavePollPublishTypeAsync(QuestionId, PublishTypeId, TextVal, ModifiedEmpId, Operation, null);
        }
        
        /// <remarks/>
        public void SavePollPublishTypeAsync(int QuestionId, int PublishTypeId, string TextVal, int ModifiedEmpId, int Operation, object userState) {
            if ((this.SavePollPublishTypeOperationCompleted == null)) {
                this.SavePollPublishTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSavePollPublishTypeOperationCompleted);
            }
            this.InvokeAsync("SavePollPublishType", new object[] {
                        QuestionId,
                        PublishTypeId,
                        TextVal,
                        ModifiedEmpId,
                        Operation}, this.SavePollPublishTypeOperationCompleted, userState);
        }
        
        private void OnSavePollPublishTypeOperationCompleted(object arg) {
            if ((this.SavePollPublishTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SavePollPublishTypeCompleted(this, new SavePollPublishTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteOfficePoll", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeleteOfficePoll(int PollId, int Operation) {
            object[] results = this.Invoke("DeleteOfficePoll", new object[] {
                        PollId,
                        Operation});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteOfficePollAsync(int PollId, int Operation) {
            this.DeleteOfficePollAsync(PollId, Operation, null);
        }
        
        /// <remarks/>
        public void DeleteOfficePollAsync(int PollId, int Operation, object userState) {
            if ((this.DeleteOfficePollOperationCompleted == null)) {
                this.DeleteOfficePollOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteOfficePollOperationCompleted);
            }
            this.InvokeAsync("DeleteOfficePoll", new object[] {
                        PollId,
                        Operation}, this.DeleteOfficePollOperationCompleted, userState);
        }
        
        private void OnDeleteOfficePollOperationCompleted(object arg) {
            if ((this.DeleteOfficePollCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteOfficePollCompleted(this, new DeleteOfficePollCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void AnnouncementOrEventsOperCompletedEventHandler(object sender, AnnouncementOrEventsOperCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AnnouncementOrEventsOperCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AnnouncementOrEventsOperCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void SaveTrainingCompletedEventHandler(object sender, SaveTrainingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveTrainingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveTrainingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void UpdateTrainingTicketCompletedEventHandler(object sender, UpdateTrainingTicketCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateTrainingTicketCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateTrainingTicketCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetDataForCalendarCompletedEventHandler(object sender, GetDataForCalendarCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDataForCalendarCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDataForCalendarCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void SaveTrainingAssessmentCompletedEventHandler(object sender, SaveTrainingAssessmentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveTrainingAssessmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveTrainingAssessmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void SaveOfficePollCompletedEventHandler(object sender, SaveOfficePollCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveOfficePollCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveOfficePollCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void SaveQuestionCompletedEventHandler(object sender, SaveQuestionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveQuestionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveQuestionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void SetOptionsForQuestionCompletedEventHandler(object sender, SetOptionsForQuestionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetOptionsForQuestionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetOptionsForQuestionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void SaveTbPollResultCompletedEventHandler(object sender, SaveTbPollResultCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveTbPollResultCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveTbPollResultCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void SaveOptionsPollResultCompletedEventHandler(object sender, SaveOptionsPollResultCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveOptionsPollResultCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveOptionsPollResultCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void SavePollPublishTypeCompletedEventHandler(object sender, SavePollPublishTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SavePollPublishTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SavePollPublishTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void DeleteOfficePollCompletedEventHandler(object sender, DeleteOfficePollCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteOfficePollCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteOfficePollCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591