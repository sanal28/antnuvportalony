//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace NuPortal.NuPortalUSRecService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="NuPortalUSRecServiceSoap", Namespace="http://tempuri.org/")]
    public partial class NuPortalUSRecService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback SaveOpportunityOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveReqDocsOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveLeadOperationCompleted;
        
        private System.Threading.SendOrPostCallback setRecSkillsOperationCompleted;
        
        private System.Threading.SendOrPostCallback setLeadSkillsOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveInterViewOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveContractOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveContractDocsOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveVendorDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveInvoiceDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveInvoiceContactDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveSubmissionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveSubmittedVisaDocsOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveSubmittedDocsOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveVisaProcessingOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveVisaDateDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveFamilyVisaDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateRecEmployeeOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public NuPortalUSRecService() {
            this.Url = global::NuPortal.Properties.Settings.Default.NuPortal_NuPortalUSRecService_NuPortalUSRecService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event SaveOpportunityCompletedEventHandler SaveOpportunityCompleted;
        
        /// <remarks/>
        public event SaveReqDocsCompletedEventHandler SaveReqDocsCompleted;
        
        /// <remarks/>
        public event SaveLeadCompletedEventHandler SaveLeadCompleted;
        
        /// <remarks/>
        public event setRecSkillsCompletedEventHandler setRecSkillsCompleted;
        
        /// <remarks/>
        public event setLeadSkillsCompletedEventHandler setLeadSkillsCompleted;
        
        /// <remarks/>
        public event SaveInterViewCompletedEventHandler SaveInterViewCompleted;
        
        /// <remarks/>
        public event SaveContractCompletedEventHandler SaveContractCompleted;
        
        /// <remarks/>
        public event SaveContractDocsCompletedEventHandler SaveContractDocsCompleted;
        
        /// <remarks/>
        public event SaveVendorDetailsCompletedEventHandler SaveVendorDetailsCompleted;
        
        /// <remarks/>
        public event SaveInvoiceDetailsCompletedEventHandler SaveInvoiceDetailsCompleted;
        
        /// <remarks/>
        public event SaveInvoiceContactDetailsCompletedEventHandler SaveInvoiceContactDetailsCompleted;
        
        /// <remarks/>
        public event SaveSubmissionsCompletedEventHandler SaveSubmissionsCompleted;
        
        /// <remarks/>
        public event SaveSubmittedVisaDocsCompletedEventHandler SaveSubmittedVisaDocsCompleted;
        
        /// <remarks/>
        public event SaveSubmittedDocsCompletedEventHandler SaveSubmittedDocsCompleted;
        
        /// <remarks/>
        public event SaveVisaProcessingCompletedEventHandler SaveVisaProcessingCompleted;
        
        /// <remarks/>
        public event SaveVisaDateDetailsCompletedEventHandler SaveVisaDateDetailsCompleted;
        
        /// <remarks/>
        public event SaveFamilyVisaDetailsCompletedEventHandler SaveFamilyVisaDetailsCompleted;
        
        /// <remarks/>
        public event CreateRecEmployeeCompletedEventHandler CreateRecEmployeeCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveOpportunity", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SaveOpportunity(
                    int OppId, 
                    string Street, 
                    string City, 
                    string State, 
                    string ZipCode, 
                    string Country, 
                    string ClientName, 
                    string Contact1, 
                    string Contact2, 
                    string ContactPerson, 
                    int CreatedEmpID, 
                    int FKPositionType, 
                    int FKIndustry, 
                    System.DateTime TargetDate, 
                    string Note, 
                    string Attachments, 
                    string JobDescription, 
                    string Email, 
                    string Experience, 
                    string Fax, 
                    float Hours, 
                    int IsCancelled, 
                    int IsClosed, 
                    string Location, 
                    int ModifiedEmpID, 
                    int CompanyId, 
                    int NoOfOpenings, 
                    string PositionTitle, 
                    string ProfileType, 
                    string Rate, 
                    string Website, 
                    int Status, 
                    int Operation) {
            object[] results = this.Invoke("SaveOpportunity", new object[] {
                        OppId,
                        Street,
                        City,
                        State,
                        ZipCode,
                        Country,
                        ClientName,
                        Contact1,
                        Contact2,
                        ContactPerson,
                        CreatedEmpID,
                        FKPositionType,
                        FKIndustry,
                        TargetDate,
                        Note,
                        Attachments,
                        JobDescription,
                        Email,
                        Experience,
                        Fax,
                        Hours,
                        IsCancelled,
                        IsClosed,
                        Location,
                        ModifiedEmpID,
                        CompanyId,
                        NoOfOpenings,
                        PositionTitle,
                        ProfileType,
                        Rate,
                        Website,
                        Status,
                        Operation});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SaveOpportunityAsync(
                    int OppId, 
                    string Street, 
                    string City, 
                    string State, 
                    string ZipCode, 
                    string Country, 
                    string ClientName, 
                    string Contact1, 
                    string Contact2, 
                    string ContactPerson, 
                    int CreatedEmpID, 
                    int FKPositionType, 
                    int FKIndustry, 
                    System.DateTime TargetDate, 
                    string Note, 
                    string Attachments, 
                    string JobDescription, 
                    string Email, 
                    string Experience, 
                    string Fax, 
                    float Hours, 
                    int IsCancelled, 
                    int IsClosed, 
                    string Location, 
                    int ModifiedEmpID, 
                    int CompanyId, 
                    int NoOfOpenings, 
                    string PositionTitle, 
                    string ProfileType, 
                    string Rate, 
                    string Website, 
                    int Status, 
                    int Operation) {
            this.SaveOpportunityAsync(OppId, Street, City, State, ZipCode, Country, ClientName, Contact1, Contact2, ContactPerson, CreatedEmpID, FKPositionType, FKIndustry, TargetDate, Note, Attachments, JobDescription, Email, Experience, Fax, Hours, IsCancelled, IsClosed, Location, ModifiedEmpID, CompanyId, NoOfOpenings, PositionTitle, ProfileType, Rate, Website, Status, Operation, null);
        }
        
        /// <remarks/>
        public void SaveOpportunityAsync(
                    int OppId, 
                    string Street, 
                    string City, 
                    string State, 
                    string ZipCode, 
                    string Country, 
                    string ClientName, 
                    string Contact1, 
                    string Contact2, 
                    string ContactPerson, 
                    int CreatedEmpID, 
                    int FKPositionType, 
                    int FKIndustry, 
                    System.DateTime TargetDate, 
                    string Note, 
                    string Attachments, 
                    string JobDescription, 
                    string Email, 
                    string Experience, 
                    string Fax, 
                    float Hours, 
                    int IsCancelled, 
                    int IsClosed, 
                    string Location, 
                    int ModifiedEmpID, 
                    int CompanyId, 
                    int NoOfOpenings, 
                    string PositionTitle, 
                    string ProfileType, 
                    string Rate, 
                    string Website, 
                    int Status, 
                    int Operation, 
                    object userState) {
            if ((this.SaveOpportunityOperationCompleted == null)) {
                this.SaveOpportunityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveOpportunityOperationCompleted);
            }
            this.InvokeAsync("SaveOpportunity", new object[] {
                        OppId,
                        Street,
                        City,
                        State,
                        ZipCode,
                        Country,
                        ClientName,
                        Contact1,
                        Contact2,
                        ContactPerson,
                        CreatedEmpID,
                        FKPositionType,
                        FKIndustry,
                        TargetDate,
                        Note,
                        Attachments,
                        JobDescription,
                        Email,
                        Experience,
                        Fax,
                        Hours,
                        IsCancelled,
                        IsClosed,
                        Location,
                        ModifiedEmpID,
                        CompanyId,
                        NoOfOpenings,
                        PositionTitle,
                        ProfileType,
                        Rate,
                        Website,
                        Status,
                        Operation}, this.SaveOpportunityOperationCompleted, userState);
        }
        
        private void OnSaveOpportunityOperationCompleted(object arg) {
            if ((this.SaveOpportunityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveOpportunityCompleted(this, new SaveOpportunityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveReqDocs", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SaveReqDocs(int Id, string jsonReqDocs) {
            object[] results = this.Invoke("SaveReqDocs", new object[] {
                        Id,
                        jsonReqDocs});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SaveReqDocsAsync(int Id, string jsonReqDocs) {
            this.SaveReqDocsAsync(Id, jsonReqDocs, null);
        }
        
        /// <remarks/>
        public void SaveReqDocsAsync(int Id, string jsonReqDocs, object userState) {
            if ((this.SaveReqDocsOperationCompleted == null)) {
                this.SaveReqDocsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveReqDocsOperationCompleted);
            }
            this.InvokeAsync("SaveReqDocs", new object[] {
                        Id,
                        jsonReqDocs}, this.SaveReqDocsOperationCompleted, userState);
        }
        
        private void OnSaveReqDocsOperationCompleted(object arg) {
            if ((this.SaveReqDocsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveReqDocsCompleted(this, new SaveReqDocsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveLead", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SaveLead(
                    int LeadId, 
                    int CreatedEmpID, 
                    string CurrentCTC, 
                    string CurrentDesignation, 
                    string CurrentEmployer, 
                    int VisaType, 
                    string Street, 
                    string City, 
                    string Zip, 
                    string State, 
                    string Country, 
                    string HighestQualification, 
                    string Source, 
                    string CurrentLocation, 
                    System.DateTime DOB, 
                    string EmailId, 
                    int EmployeeType, 
                    int EmploymentType, 
                    int ExperienceInMonths, 
                    string FirstName, 
                    string Gender, 
                    int Hours, 
                    string LastName, 
                    int LeadType, 
                    string MobileNo, 
                    int ModifiedEmpID, 
                    string Note, 
                    string Rate, 
                    int Status, 
                    int IsCancelled, 
                    string Attachments, 
                    int RecStatus, 
                    int Operation) {
            object[] results = this.Invoke("SaveLead", new object[] {
                        LeadId,
                        CreatedEmpID,
                        CurrentCTC,
                        CurrentDesignation,
                        CurrentEmployer,
                        VisaType,
                        Street,
                        City,
                        Zip,
                        State,
                        Country,
                        HighestQualification,
                        Source,
                        CurrentLocation,
                        DOB,
                        EmailId,
                        EmployeeType,
                        EmploymentType,
                        ExperienceInMonths,
                        FirstName,
                        Gender,
                        Hours,
                        LastName,
                        LeadType,
                        MobileNo,
                        ModifiedEmpID,
                        Note,
                        Rate,
                        Status,
                        IsCancelled,
                        Attachments,
                        RecStatus,
                        Operation});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SaveLeadAsync(
                    int LeadId, 
                    int CreatedEmpID, 
                    string CurrentCTC, 
                    string CurrentDesignation, 
                    string CurrentEmployer, 
                    int VisaType, 
                    string Street, 
                    string City, 
                    string Zip, 
                    string State, 
                    string Country, 
                    string HighestQualification, 
                    string Source, 
                    string CurrentLocation, 
                    System.DateTime DOB, 
                    string EmailId, 
                    int EmployeeType, 
                    int EmploymentType, 
                    int ExperienceInMonths, 
                    string FirstName, 
                    string Gender, 
                    int Hours, 
                    string LastName, 
                    int LeadType, 
                    string MobileNo, 
                    int ModifiedEmpID, 
                    string Note, 
                    string Rate, 
                    int Status, 
                    int IsCancelled, 
                    string Attachments, 
                    int RecStatus, 
                    int Operation) {
            this.SaveLeadAsync(LeadId, CreatedEmpID, CurrentCTC, CurrentDesignation, CurrentEmployer, VisaType, Street, City, Zip, State, Country, HighestQualification, Source, CurrentLocation, DOB, EmailId, EmployeeType, EmploymentType, ExperienceInMonths, FirstName, Gender, Hours, LastName, LeadType, MobileNo, ModifiedEmpID, Note, Rate, Status, IsCancelled, Attachments, RecStatus, Operation, null);
        }
        
        /// <remarks/>
        public void SaveLeadAsync(
                    int LeadId, 
                    int CreatedEmpID, 
                    string CurrentCTC, 
                    string CurrentDesignation, 
                    string CurrentEmployer, 
                    int VisaType, 
                    string Street, 
                    string City, 
                    string Zip, 
                    string State, 
                    string Country, 
                    string HighestQualification, 
                    string Source, 
                    string CurrentLocation, 
                    System.DateTime DOB, 
                    string EmailId, 
                    int EmployeeType, 
                    int EmploymentType, 
                    int ExperienceInMonths, 
                    string FirstName, 
                    string Gender, 
                    int Hours, 
                    string LastName, 
                    int LeadType, 
                    string MobileNo, 
                    int ModifiedEmpID, 
                    string Note, 
                    string Rate, 
                    int Status, 
                    int IsCancelled, 
                    string Attachments, 
                    int RecStatus, 
                    int Operation, 
                    object userState) {
            if ((this.SaveLeadOperationCompleted == null)) {
                this.SaveLeadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveLeadOperationCompleted);
            }
            this.InvokeAsync("SaveLead", new object[] {
                        LeadId,
                        CreatedEmpID,
                        CurrentCTC,
                        CurrentDesignation,
                        CurrentEmployer,
                        VisaType,
                        Street,
                        City,
                        Zip,
                        State,
                        Country,
                        HighestQualification,
                        Source,
                        CurrentLocation,
                        DOB,
                        EmailId,
                        EmployeeType,
                        EmploymentType,
                        ExperienceInMonths,
                        FirstName,
                        Gender,
                        Hours,
                        LastName,
                        LeadType,
                        MobileNo,
                        ModifiedEmpID,
                        Note,
                        Rate,
                        Status,
                        IsCancelled,
                        Attachments,
                        RecStatus,
                        Operation}, this.SaveLeadOperationCompleted, userState);
        }
        
        private void OnSaveLeadOperationCompleted(object arg) {
            if ((this.SaveLeadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveLeadCompleted(this, new SaveLeadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/setRecSkills", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool setRecSkills(int Id, string jsonRecSkills) {
            object[] results = this.Invoke("setRecSkills", new object[] {
                        Id,
                        jsonRecSkills});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void setRecSkillsAsync(int Id, string jsonRecSkills) {
            this.setRecSkillsAsync(Id, jsonRecSkills, null);
        }
        
        /// <remarks/>
        public void setRecSkillsAsync(int Id, string jsonRecSkills, object userState) {
            if ((this.setRecSkillsOperationCompleted == null)) {
                this.setRecSkillsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetRecSkillsOperationCompleted);
            }
            this.InvokeAsync("setRecSkills", new object[] {
                        Id,
                        jsonRecSkills}, this.setRecSkillsOperationCompleted, userState);
        }
        
        private void OnsetRecSkillsOperationCompleted(object arg) {
            if ((this.setRecSkillsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setRecSkillsCompleted(this, new setRecSkillsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/setLeadSkills", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool setLeadSkills(int Id, string jsonLeadSkills) {
            object[] results = this.Invoke("setLeadSkills", new object[] {
                        Id,
                        jsonLeadSkills});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void setLeadSkillsAsync(int Id, string jsonLeadSkills) {
            this.setLeadSkillsAsync(Id, jsonLeadSkills, null);
        }
        
        /// <remarks/>
        public void setLeadSkillsAsync(int Id, string jsonLeadSkills, object userState) {
            if ((this.setLeadSkillsOperationCompleted == null)) {
                this.setLeadSkillsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetLeadSkillsOperationCompleted);
            }
            this.InvokeAsync("setLeadSkills", new object[] {
                        Id,
                        jsonLeadSkills}, this.setLeadSkillsOperationCompleted, userState);
        }
        
        private void OnsetLeadSkillsOperationCompleted(object arg) {
            if ((this.setLeadSkillsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setLeadSkillsCompleted(this, new setLeadSkillsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveInterView", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SaveInterView(int InterviewId, string Attachments, int CreatedEmpID, int FK_Interviewtype, int FK_SubmissionId, int FK_TicketStatusId, System.DateTime InterviewDate, string InterviewTime, string Note, string Location, int ModifiedEmpID, int Operation) {
            object[] results = this.Invoke("SaveInterView", new object[] {
                        InterviewId,
                        Attachments,
                        CreatedEmpID,
                        FK_Interviewtype,
                        FK_SubmissionId,
                        FK_TicketStatusId,
                        InterviewDate,
                        InterviewTime,
                        Note,
                        Location,
                        ModifiedEmpID,
                        Operation});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SaveInterViewAsync(int InterviewId, string Attachments, int CreatedEmpID, int FK_Interviewtype, int FK_SubmissionId, int FK_TicketStatusId, System.DateTime InterviewDate, string InterviewTime, string Note, string Location, int ModifiedEmpID, int Operation) {
            this.SaveInterViewAsync(InterviewId, Attachments, CreatedEmpID, FK_Interviewtype, FK_SubmissionId, FK_TicketStatusId, InterviewDate, InterviewTime, Note, Location, ModifiedEmpID, Operation, null);
        }
        
        /// <remarks/>
        public void SaveInterViewAsync(int InterviewId, string Attachments, int CreatedEmpID, int FK_Interviewtype, int FK_SubmissionId, int FK_TicketStatusId, System.DateTime InterviewDate, string InterviewTime, string Note, string Location, int ModifiedEmpID, int Operation, object userState) {
            if ((this.SaveInterViewOperationCompleted == null)) {
                this.SaveInterViewOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveInterViewOperationCompleted);
            }
            this.InvokeAsync("SaveInterView", new object[] {
                        InterviewId,
                        Attachments,
                        CreatedEmpID,
                        FK_Interviewtype,
                        FK_SubmissionId,
                        FK_TicketStatusId,
                        InterviewDate,
                        InterviewTime,
                        Note,
                        Location,
                        ModifiedEmpID,
                        Operation}, this.SaveInterViewOperationCompleted, userState);
        }
        
        private void OnSaveInterViewOperationCompleted(object arg) {
            if ((this.SaveInterViewCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveInterViewCompleted(this, new SaveInterViewCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveContract", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SaveContract(
                    int ContractId, 
                    int FK_SubmissionId, 
                    int FK_TicketStatusId, 
                    string Title, 
                    System.DateTime Date, 
                    string SignedBy, 
                    string TitleClient, 
                    System.DateTime DateClient, 
                    string SignedByClient, 
                    string State, 
                    System.DateTime ContractExpiryDate, 
                    int IsRateConfirmationPresent, 
                    int CreatedEmpID, 
                    int ModifiedEmpID, 
                    int Status, 
                    int Operation) {
            object[] results = this.Invoke("SaveContract", new object[] {
                        ContractId,
                        FK_SubmissionId,
                        FK_TicketStatusId,
                        Title,
                        Date,
                        SignedBy,
                        TitleClient,
                        DateClient,
                        SignedByClient,
                        State,
                        ContractExpiryDate,
                        IsRateConfirmationPresent,
                        CreatedEmpID,
                        ModifiedEmpID,
                        Status,
                        Operation});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SaveContractAsync(
                    int ContractId, 
                    int FK_SubmissionId, 
                    int FK_TicketStatusId, 
                    string Title, 
                    System.DateTime Date, 
                    string SignedBy, 
                    string TitleClient, 
                    System.DateTime DateClient, 
                    string SignedByClient, 
                    string State, 
                    System.DateTime ContractExpiryDate, 
                    int IsRateConfirmationPresent, 
                    int CreatedEmpID, 
                    int ModifiedEmpID, 
                    int Status, 
                    int Operation) {
            this.SaveContractAsync(ContractId, FK_SubmissionId, FK_TicketStatusId, Title, Date, SignedBy, TitleClient, DateClient, SignedByClient, State, ContractExpiryDate, IsRateConfirmationPresent, CreatedEmpID, ModifiedEmpID, Status, Operation, null);
        }
        
        /// <remarks/>
        public void SaveContractAsync(
                    int ContractId, 
                    int FK_SubmissionId, 
                    int FK_TicketStatusId, 
                    string Title, 
                    System.DateTime Date, 
                    string SignedBy, 
                    string TitleClient, 
                    System.DateTime DateClient, 
                    string SignedByClient, 
                    string State, 
                    System.DateTime ContractExpiryDate, 
                    int IsRateConfirmationPresent, 
                    int CreatedEmpID, 
                    int ModifiedEmpID, 
                    int Status, 
                    int Operation, 
                    object userState) {
            if ((this.SaveContractOperationCompleted == null)) {
                this.SaveContractOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveContractOperationCompleted);
            }
            this.InvokeAsync("SaveContract", new object[] {
                        ContractId,
                        FK_SubmissionId,
                        FK_TicketStatusId,
                        Title,
                        Date,
                        SignedBy,
                        TitleClient,
                        DateClient,
                        SignedByClient,
                        State,
                        ContractExpiryDate,
                        IsRateConfirmationPresent,
                        CreatedEmpID,
                        ModifiedEmpID,
                        Status,
                        Operation}, this.SaveContractOperationCompleted, userState);
        }
        
        private void OnSaveContractOperationCompleted(object arg) {
            if ((this.SaveContractCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveContractCompleted(this, new SaveContractCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveContractDocs", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SaveContractDocs(int Id, string jsonContractDocs) {
            object[] results = this.Invoke("SaveContractDocs", new object[] {
                        Id,
                        jsonContractDocs});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SaveContractDocsAsync(int Id, string jsonContractDocs) {
            this.SaveContractDocsAsync(Id, jsonContractDocs, null);
        }
        
        /// <remarks/>
        public void SaveContractDocsAsync(int Id, string jsonContractDocs, object userState) {
            if ((this.SaveContractDocsOperationCompleted == null)) {
                this.SaveContractDocsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveContractDocsOperationCompleted);
            }
            this.InvokeAsync("SaveContractDocs", new object[] {
                        Id,
                        jsonContractDocs}, this.SaveContractDocsOperationCompleted, userState);
        }
        
        private void OnSaveContractDocsOperationCompleted(object arg) {
            if ((this.SaveContractDocsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveContractDocsCompleted(this, new SaveContractDocsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveVendorDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SaveVendorDetails(
                    int VendorDetailsId, 
                    int FK_LeadId, 
                    string CompanyName, 
                    string CompanyID, 
                    string CompanyAddress, 
                    string ContactPerson1Name, 
                    string ContactPerson1Title, 
                    string ContactPerson2Name, 
                    string ContactPerson2Title, 
                    string ContactPerson3Name, 
                    string ContactPerson3Title, 
                    string VendorID, 
                    string DepositoryBankName, 
                    string Branch, 
                    string City, 
                    string State, 
                    string RoutingNumber, 
                    string AccountName, 
                    string AccountNumber, 
                    int AccountType, 
                    string VendorName, 
                    string IDNumber, 
                    string SignedBy, 
                    string Designation, 
                    System.DateTime Date, 
                    string Attachments, 
                    int FK_TicketStatusId, 
                    int CreatedEmpID, 
                    int ModifiedEmpID, 
                    int Status, 
                    int Operation) {
            object[] results = this.Invoke("SaveVendorDetails", new object[] {
                        VendorDetailsId,
                        FK_LeadId,
                        CompanyName,
                        CompanyID,
                        CompanyAddress,
                        ContactPerson1Name,
                        ContactPerson1Title,
                        ContactPerson2Name,
                        ContactPerson2Title,
                        ContactPerson3Name,
                        ContactPerson3Title,
                        VendorID,
                        DepositoryBankName,
                        Branch,
                        City,
                        State,
                        RoutingNumber,
                        AccountName,
                        AccountNumber,
                        AccountType,
                        VendorName,
                        IDNumber,
                        SignedBy,
                        Designation,
                        Date,
                        Attachments,
                        FK_TicketStatusId,
                        CreatedEmpID,
                        ModifiedEmpID,
                        Status,
                        Operation});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SaveVendorDetailsAsync(
                    int VendorDetailsId, 
                    int FK_LeadId, 
                    string CompanyName, 
                    string CompanyID, 
                    string CompanyAddress, 
                    string ContactPerson1Name, 
                    string ContactPerson1Title, 
                    string ContactPerson2Name, 
                    string ContactPerson2Title, 
                    string ContactPerson3Name, 
                    string ContactPerson3Title, 
                    string VendorID, 
                    string DepositoryBankName, 
                    string Branch, 
                    string City, 
                    string State, 
                    string RoutingNumber, 
                    string AccountName, 
                    string AccountNumber, 
                    int AccountType, 
                    string VendorName, 
                    string IDNumber, 
                    string SignedBy, 
                    string Designation, 
                    System.DateTime Date, 
                    string Attachments, 
                    int FK_TicketStatusId, 
                    int CreatedEmpID, 
                    int ModifiedEmpID, 
                    int Status, 
                    int Operation) {
            this.SaveVendorDetailsAsync(VendorDetailsId, FK_LeadId, CompanyName, CompanyID, CompanyAddress, ContactPerson1Name, ContactPerson1Title, ContactPerson2Name, ContactPerson2Title, ContactPerson3Name, ContactPerson3Title, VendorID, DepositoryBankName, Branch, City, State, RoutingNumber, AccountName, AccountNumber, AccountType, VendorName, IDNumber, SignedBy, Designation, Date, Attachments, FK_TicketStatusId, CreatedEmpID, ModifiedEmpID, Status, Operation, null);
        }
        
        /// <remarks/>
        public void SaveVendorDetailsAsync(
                    int VendorDetailsId, 
                    int FK_LeadId, 
                    string CompanyName, 
                    string CompanyID, 
                    string CompanyAddress, 
                    string ContactPerson1Name, 
                    string ContactPerson1Title, 
                    string ContactPerson2Name, 
                    string ContactPerson2Title, 
                    string ContactPerson3Name, 
                    string ContactPerson3Title, 
                    string VendorID, 
                    string DepositoryBankName, 
                    string Branch, 
                    string City, 
                    string State, 
                    string RoutingNumber, 
                    string AccountName, 
                    string AccountNumber, 
                    int AccountType, 
                    string VendorName, 
                    string IDNumber, 
                    string SignedBy, 
                    string Designation, 
                    System.DateTime Date, 
                    string Attachments, 
                    int FK_TicketStatusId, 
                    int CreatedEmpID, 
                    int ModifiedEmpID, 
                    int Status, 
                    int Operation, 
                    object userState) {
            if ((this.SaveVendorDetailsOperationCompleted == null)) {
                this.SaveVendorDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveVendorDetailsOperationCompleted);
            }
            this.InvokeAsync("SaveVendorDetails", new object[] {
                        VendorDetailsId,
                        FK_LeadId,
                        CompanyName,
                        CompanyID,
                        CompanyAddress,
                        ContactPerson1Name,
                        ContactPerson1Title,
                        ContactPerson2Name,
                        ContactPerson2Title,
                        ContactPerson3Name,
                        ContactPerson3Title,
                        VendorID,
                        DepositoryBankName,
                        Branch,
                        City,
                        State,
                        RoutingNumber,
                        AccountName,
                        AccountNumber,
                        AccountType,
                        VendorName,
                        IDNumber,
                        SignedBy,
                        Designation,
                        Date,
                        Attachments,
                        FK_TicketStatusId,
                        CreatedEmpID,
                        ModifiedEmpID,
                        Status,
                        Operation}, this.SaveVendorDetailsOperationCompleted, userState);
        }
        
        private void OnSaveVendorDetailsOperationCompleted(object arg) {
            if ((this.SaveVendorDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveVendorDetailsCompleted(this, new SaveVendorDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveInvoiceDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SaveInvoiceDetails(
                    int InvoiceId, 
                    int FK_SubmissionId, 
                    int FKTicketStatusId, 
                    string Name, 
                    string Email, 
                    string Terms, 
                    int FK_BillingCycle, 
                    string Street, 
                    string City, 
                    string State, 
                    string Country, 
                    string Zip, 
                    string CcList, 
                    int Status, 
                    int CreatedEmpID, 
                    int ModifiedEmpID, 
                    int Operation) {
            object[] results = this.Invoke("SaveInvoiceDetails", new object[] {
                        InvoiceId,
                        FK_SubmissionId,
                        FKTicketStatusId,
                        Name,
                        Email,
                        Terms,
                        FK_BillingCycle,
                        Street,
                        City,
                        State,
                        Country,
                        Zip,
                        CcList,
                        Status,
                        CreatedEmpID,
                        ModifiedEmpID,
                        Operation});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SaveInvoiceDetailsAsync(
                    int InvoiceId, 
                    int FK_SubmissionId, 
                    int FKTicketStatusId, 
                    string Name, 
                    string Email, 
                    string Terms, 
                    int FK_BillingCycle, 
                    string Street, 
                    string City, 
                    string State, 
                    string Country, 
                    string Zip, 
                    string CcList, 
                    int Status, 
                    int CreatedEmpID, 
                    int ModifiedEmpID, 
                    int Operation) {
            this.SaveInvoiceDetailsAsync(InvoiceId, FK_SubmissionId, FKTicketStatusId, Name, Email, Terms, FK_BillingCycle, Street, City, State, Country, Zip, CcList, Status, CreatedEmpID, ModifiedEmpID, Operation, null);
        }
        
        /// <remarks/>
        public void SaveInvoiceDetailsAsync(
                    int InvoiceId, 
                    int FK_SubmissionId, 
                    int FKTicketStatusId, 
                    string Name, 
                    string Email, 
                    string Terms, 
                    int FK_BillingCycle, 
                    string Street, 
                    string City, 
                    string State, 
                    string Country, 
                    string Zip, 
                    string CcList, 
                    int Status, 
                    int CreatedEmpID, 
                    int ModifiedEmpID, 
                    int Operation, 
                    object userState) {
            if ((this.SaveInvoiceDetailsOperationCompleted == null)) {
                this.SaveInvoiceDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveInvoiceDetailsOperationCompleted);
            }
            this.InvokeAsync("SaveInvoiceDetails", new object[] {
                        InvoiceId,
                        FK_SubmissionId,
                        FKTicketStatusId,
                        Name,
                        Email,
                        Terms,
                        FK_BillingCycle,
                        Street,
                        City,
                        State,
                        Country,
                        Zip,
                        CcList,
                        Status,
                        CreatedEmpID,
                        ModifiedEmpID,
                        Operation}, this.SaveInvoiceDetailsOperationCompleted, userState);
        }
        
        private void OnSaveInvoiceDetailsOperationCompleted(object arg) {
            if ((this.SaveInvoiceDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveInvoiceDetailsCompleted(this, new SaveInvoiceDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveInvoiceContactDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SaveInvoiceContactDetails(int Id, string jsonInvoiceDocs) {
            object[] results = this.Invoke("SaveInvoiceContactDetails", new object[] {
                        Id,
                        jsonInvoiceDocs});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SaveInvoiceContactDetailsAsync(int Id, string jsonInvoiceDocs) {
            this.SaveInvoiceContactDetailsAsync(Id, jsonInvoiceDocs, null);
        }
        
        /// <remarks/>
        public void SaveInvoiceContactDetailsAsync(int Id, string jsonInvoiceDocs, object userState) {
            if ((this.SaveInvoiceContactDetailsOperationCompleted == null)) {
                this.SaveInvoiceContactDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveInvoiceContactDetailsOperationCompleted);
            }
            this.InvokeAsync("SaveInvoiceContactDetails", new object[] {
                        Id,
                        jsonInvoiceDocs}, this.SaveInvoiceContactDetailsOperationCompleted, userState);
        }
        
        private void OnSaveInvoiceContactDetailsOperationCompleted(object arg) {
            if ((this.SaveInvoiceContactDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveInvoiceContactDetailsCompleted(this, new SaveInvoiceContactDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveSubmissions", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SaveSubmissions(int SubmissionId, int FKSubmissionStatusId, int FK_OppId, int FK_LeadId, string Rate, int AssignedTo, int FK_TicketStatusId, int IsCancelled, int Status, int CreatedEmpID, int ModifiedEmpID, int Operation) {
            object[] results = this.Invoke("SaveSubmissions", new object[] {
                        SubmissionId,
                        FKSubmissionStatusId,
                        FK_OppId,
                        FK_LeadId,
                        Rate,
                        AssignedTo,
                        FK_TicketStatusId,
                        IsCancelled,
                        Status,
                        CreatedEmpID,
                        ModifiedEmpID,
                        Operation});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SaveSubmissionsAsync(int SubmissionId, int FKSubmissionStatusId, int FK_OppId, int FK_LeadId, string Rate, int AssignedTo, int FK_TicketStatusId, int IsCancelled, int Status, int CreatedEmpID, int ModifiedEmpID, int Operation) {
            this.SaveSubmissionsAsync(SubmissionId, FKSubmissionStatusId, FK_OppId, FK_LeadId, Rate, AssignedTo, FK_TicketStatusId, IsCancelled, Status, CreatedEmpID, ModifiedEmpID, Operation, null);
        }
        
        /// <remarks/>
        public void SaveSubmissionsAsync(int SubmissionId, int FKSubmissionStatusId, int FK_OppId, int FK_LeadId, string Rate, int AssignedTo, int FK_TicketStatusId, int IsCancelled, int Status, int CreatedEmpID, int ModifiedEmpID, int Operation, object userState) {
            if ((this.SaveSubmissionsOperationCompleted == null)) {
                this.SaveSubmissionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveSubmissionsOperationCompleted);
            }
            this.InvokeAsync("SaveSubmissions", new object[] {
                        SubmissionId,
                        FKSubmissionStatusId,
                        FK_OppId,
                        FK_LeadId,
                        Rate,
                        AssignedTo,
                        FK_TicketStatusId,
                        IsCancelled,
                        Status,
                        CreatedEmpID,
                        ModifiedEmpID,
                        Operation}, this.SaveSubmissionsOperationCompleted, userState);
        }
        
        private void OnSaveSubmissionsOperationCompleted(object arg) {
            if ((this.SaveSubmissionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveSubmissionsCompleted(this, new SaveSubmissionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveSubmittedVisaDocs", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SaveSubmittedVisaDocs(int Id, string jsonSubmittedVisaDocs) {
            object[] results = this.Invoke("SaveSubmittedVisaDocs", new object[] {
                        Id,
                        jsonSubmittedVisaDocs});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SaveSubmittedVisaDocsAsync(int Id, string jsonSubmittedVisaDocs) {
            this.SaveSubmittedVisaDocsAsync(Id, jsonSubmittedVisaDocs, null);
        }
        
        /// <remarks/>
        public void SaveSubmittedVisaDocsAsync(int Id, string jsonSubmittedVisaDocs, object userState) {
            if ((this.SaveSubmittedVisaDocsOperationCompleted == null)) {
                this.SaveSubmittedVisaDocsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveSubmittedVisaDocsOperationCompleted);
            }
            this.InvokeAsync("SaveSubmittedVisaDocs", new object[] {
                        Id,
                        jsonSubmittedVisaDocs}, this.SaveSubmittedVisaDocsOperationCompleted, userState);
        }
        
        private void OnSaveSubmittedVisaDocsOperationCompleted(object arg) {
            if ((this.SaveSubmittedVisaDocsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveSubmittedVisaDocsCompleted(this, new SaveSubmittedVisaDocsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveSubmittedDocs", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SaveSubmittedDocs(int Id, string jsonSubmittedDocs) {
            object[] results = this.Invoke("SaveSubmittedDocs", new object[] {
                        Id,
                        jsonSubmittedDocs});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SaveSubmittedDocsAsync(int Id, string jsonSubmittedDocs) {
            this.SaveSubmittedDocsAsync(Id, jsonSubmittedDocs, null);
        }
        
        /// <remarks/>
        public void SaveSubmittedDocsAsync(int Id, string jsonSubmittedDocs, object userState) {
            if ((this.SaveSubmittedDocsOperationCompleted == null)) {
                this.SaveSubmittedDocsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveSubmittedDocsOperationCompleted);
            }
            this.InvokeAsync("SaveSubmittedDocs", new object[] {
                        Id,
                        jsonSubmittedDocs}, this.SaveSubmittedDocsOperationCompleted, userState);
        }
        
        private void OnSaveSubmittedDocsOperationCompleted(object arg) {
            if ((this.SaveSubmittedDocsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveSubmittedDocsCompleted(this, new SaveSubmittedDocsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveVisaProcessing", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SaveVisaProcessing(
                    int VisaProcessingId, 
                    int FKSubmissionId, 
                    string CompanyAddress, 
                    string CompanyDescription, 
                    System.DateTime CompanyEstDate, 
                    string CompanyName, 
                    int CreatedEmpID, 
                    string Email, 
                    string EmpAbroadAddress, 
                    string EmpCountryOfBirth, 
                    System.DateTime EmpDOB, 
                    string EmpFname, 
                    string EmpLname, 
                    string EmpMName, 
                    string EmpNearestConsulate, 
                    string EmpPlaceOfBirth, 
                    string EmpSSN, 
                    string EmpUSAddress, 
                    string Fax, 
                    string FederalTAXIDNumber, 
                    string GrossAnnualIncome, 
                    System.DateTime I94IssueDate, 
                    string I94Number, 
                    System.DateTime I94ValidityDate, 
                    int IsCompanyH1BDependent, 
                    string JobLocationAddress, 
                    string JobTitleOffered, 
                    string LastI797ApprovalReceipt, 
                    int MaritalStatus, 
                    int ModifiedEmpID, 
                    string NameOfPersonToSign, 
                    string NetIncome, 
                    int NoOfEmployees, 
                    int NoOfH1BEmployees, 
                    System.DateTime PassportIssueDate, 
                    string PassportNumber, 
                    System.DateTime PassportValidityDate, 
                    string Phone, 
                    string SalaryOffered, 
                    string TitleOfPersonToSign, 
                    System.DateTime TicketSubmissionDate, 
                    int FK_TicketStatusId, 
                    int Operation) {
            object[] results = this.Invoke("SaveVisaProcessing", new object[] {
                        VisaProcessingId,
                        FKSubmissionId,
                        CompanyAddress,
                        CompanyDescription,
                        CompanyEstDate,
                        CompanyName,
                        CreatedEmpID,
                        Email,
                        EmpAbroadAddress,
                        EmpCountryOfBirth,
                        EmpDOB,
                        EmpFname,
                        EmpLname,
                        EmpMName,
                        EmpNearestConsulate,
                        EmpPlaceOfBirth,
                        EmpSSN,
                        EmpUSAddress,
                        Fax,
                        FederalTAXIDNumber,
                        GrossAnnualIncome,
                        I94IssueDate,
                        I94Number,
                        I94ValidityDate,
                        IsCompanyH1BDependent,
                        JobLocationAddress,
                        JobTitleOffered,
                        LastI797ApprovalReceipt,
                        MaritalStatus,
                        ModifiedEmpID,
                        NameOfPersonToSign,
                        NetIncome,
                        NoOfEmployees,
                        NoOfH1BEmployees,
                        PassportIssueDate,
                        PassportNumber,
                        PassportValidityDate,
                        Phone,
                        SalaryOffered,
                        TitleOfPersonToSign,
                        TicketSubmissionDate,
                        FK_TicketStatusId,
                        Operation});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SaveVisaProcessingAsync(
                    int VisaProcessingId, 
                    int FKSubmissionId, 
                    string CompanyAddress, 
                    string CompanyDescription, 
                    System.DateTime CompanyEstDate, 
                    string CompanyName, 
                    int CreatedEmpID, 
                    string Email, 
                    string EmpAbroadAddress, 
                    string EmpCountryOfBirth, 
                    System.DateTime EmpDOB, 
                    string EmpFname, 
                    string EmpLname, 
                    string EmpMName, 
                    string EmpNearestConsulate, 
                    string EmpPlaceOfBirth, 
                    string EmpSSN, 
                    string EmpUSAddress, 
                    string Fax, 
                    string FederalTAXIDNumber, 
                    string GrossAnnualIncome, 
                    System.DateTime I94IssueDate, 
                    string I94Number, 
                    System.DateTime I94ValidityDate, 
                    int IsCompanyH1BDependent, 
                    string JobLocationAddress, 
                    string JobTitleOffered, 
                    string LastI797ApprovalReceipt, 
                    int MaritalStatus, 
                    int ModifiedEmpID, 
                    string NameOfPersonToSign, 
                    string NetIncome, 
                    int NoOfEmployees, 
                    int NoOfH1BEmployees, 
                    System.DateTime PassportIssueDate, 
                    string PassportNumber, 
                    System.DateTime PassportValidityDate, 
                    string Phone, 
                    string SalaryOffered, 
                    string TitleOfPersonToSign, 
                    System.DateTime TicketSubmissionDate, 
                    int FK_TicketStatusId, 
                    int Operation) {
            this.SaveVisaProcessingAsync(VisaProcessingId, FKSubmissionId, CompanyAddress, CompanyDescription, CompanyEstDate, CompanyName, CreatedEmpID, Email, EmpAbroadAddress, EmpCountryOfBirth, EmpDOB, EmpFname, EmpLname, EmpMName, EmpNearestConsulate, EmpPlaceOfBirth, EmpSSN, EmpUSAddress, Fax, FederalTAXIDNumber, GrossAnnualIncome, I94IssueDate, I94Number, I94ValidityDate, IsCompanyH1BDependent, JobLocationAddress, JobTitleOffered, LastI797ApprovalReceipt, MaritalStatus, ModifiedEmpID, NameOfPersonToSign, NetIncome, NoOfEmployees, NoOfH1BEmployees, PassportIssueDate, PassportNumber, PassportValidityDate, Phone, SalaryOffered, TitleOfPersonToSign, TicketSubmissionDate, FK_TicketStatusId, Operation, null);
        }
        
        /// <remarks/>
        public void SaveVisaProcessingAsync(
                    int VisaProcessingId, 
                    int FKSubmissionId, 
                    string CompanyAddress, 
                    string CompanyDescription, 
                    System.DateTime CompanyEstDate, 
                    string CompanyName, 
                    int CreatedEmpID, 
                    string Email, 
                    string EmpAbroadAddress, 
                    string EmpCountryOfBirth, 
                    System.DateTime EmpDOB, 
                    string EmpFname, 
                    string EmpLname, 
                    string EmpMName, 
                    string EmpNearestConsulate, 
                    string EmpPlaceOfBirth, 
                    string EmpSSN, 
                    string EmpUSAddress, 
                    string Fax, 
                    string FederalTAXIDNumber, 
                    string GrossAnnualIncome, 
                    System.DateTime I94IssueDate, 
                    string I94Number, 
                    System.DateTime I94ValidityDate, 
                    int IsCompanyH1BDependent, 
                    string JobLocationAddress, 
                    string JobTitleOffered, 
                    string LastI797ApprovalReceipt, 
                    int MaritalStatus, 
                    int ModifiedEmpID, 
                    string NameOfPersonToSign, 
                    string NetIncome, 
                    int NoOfEmployees, 
                    int NoOfH1BEmployees, 
                    System.DateTime PassportIssueDate, 
                    string PassportNumber, 
                    System.DateTime PassportValidityDate, 
                    string Phone, 
                    string SalaryOffered, 
                    string TitleOfPersonToSign, 
                    System.DateTime TicketSubmissionDate, 
                    int FK_TicketStatusId, 
                    int Operation, 
                    object userState) {
            if ((this.SaveVisaProcessingOperationCompleted == null)) {
                this.SaveVisaProcessingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveVisaProcessingOperationCompleted);
            }
            this.InvokeAsync("SaveVisaProcessing", new object[] {
                        VisaProcessingId,
                        FKSubmissionId,
                        CompanyAddress,
                        CompanyDescription,
                        CompanyEstDate,
                        CompanyName,
                        CreatedEmpID,
                        Email,
                        EmpAbroadAddress,
                        EmpCountryOfBirth,
                        EmpDOB,
                        EmpFname,
                        EmpLname,
                        EmpMName,
                        EmpNearestConsulate,
                        EmpPlaceOfBirth,
                        EmpSSN,
                        EmpUSAddress,
                        Fax,
                        FederalTAXIDNumber,
                        GrossAnnualIncome,
                        I94IssueDate,
                        I94Number,
                        I94ValidityDate,
                        IsCompanyH1BDependent,
                        JobLocationAddress,
                        JobTitleOffered,
                        LastI797ApprovalReceipt,
                        MaritalStatus,
                        ModifiedEmpID,
                        NameOfPersonToSign,
                        NetIncome,
                        NoOfEmployees,
                        NoOfH1BEmployees,
                        PassportIssueDate,
                        PassportNumber,
                        PassportValidityDate,
                        Phone,
                        SalaryOffered,
                        TitleOfPersonToSign,
                        TicketSubmissionDate,
                        FK_TicketStatusId,
                        Operation}, this.SaveVisaProcessingOperationCompleted, userState);
        }
        
        private void OnSaveVisaProcessingOperationCompleted(object arg) {
            if ((this.SaveVisaProcessingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveVisaProcessingCompleted(this, new SaveVisaProcessingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveVisaDateDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SaveVisaDateDetails(int Id, string jsonVisaDateDetails) {
            object[] results = this.Invoke("SaveVisaDateDetails", new object[] {
                        Id,
                        jsonVisaDateDetails});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SaveVisaDateDetailsAsync(int Id, string jsonVisaDateDetails) {
            this.SaveVisaDateDetailsAsync(Id, jsonVisaDateDetails, null);
        }
        
        /// <remarks/>
        public void SaveVisaDateDetailsAsync(int Id, string jsonVisaDateDetails, object userState) {
            if ((this.SaveVisaDateDetailsOperationCompleted == null)) {
                this.SaveVisaDateDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveVisaDateDetailsOperationCompleted);
            }
            this.InvokeAsync("SaveVisaDateDetails", new object[] {
                        Id,
                        jsonVisaDateDetails}, this.SaveVisaDateDetailsOperationCompleted, userState);
        }
        
        private void OnSaveVisaDateDetailsOperationCompleted(object arg) {
            if ((this.SaveVisaDateDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveVisaDateDetailsCompleted(this, new SaveVisaDateDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveFamilyVisaDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SaveFamilyVisaDetails(int Id, string jsonFamilyVisaDetails) {
            object[] results = this.Invoke("SaveFamilyVisaDetails", new object[] {
                        Id,
                        jsonFamilyVisaDetails});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SaveFamilyVisaDetailsAsync(int Id, string jsonFamilyVisaDetails) {
            this.SaveFamilyVisaDetailsAsync(Id, jsonFamilyVisaDetails, null);
        }
        
        /// <remarks/>
        public void SaveFamilyVisaDetailsAsync(int Id, string jsonFamilyVisaDetails, object userState) {
            if ((this.SaveFamilyVisaDetailsOperationCompleted == null)) {
                this.SaveFamilyVisaDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveFamilyVisaDetailsOperationCompleted);
            }
            this.InvokeAsync("SaveFamilyVisaDetails", new object[] {
                        Id,
                        jsonFamilyVisaDetails}, this.SaveFamilyVisaDetailsOperationCompleted, userState);
        }
        
        private void OnSaveFamilyVisaDetailsOperationCompleted(object arg) {
            if ((this.SaveFamilyVisaDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveFamilyVisaDetailsCompleted(this, new SaveFamilyVisaDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CreateRecEmployee", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CreateRecEmployee(
                    int RecEmpId, 
                    string BackGroundPicUrl, 
                    System.DateTime ConfirmationDate, 
                    int CreatedEmpId, 
                    string EmployeeCode, 
                    float EmpRating, 
                    string EndTime, 
                    string FirstName, 
                    int CompanyId, 
                    int JobDesignation, 
                    int FkEmpStatus, 
                    int EmptTypeId, 
                    int Fk_SalaryType, 
                    int Fk_TypeOfVisa, 
                    string InsuranceAmount, 
                    string InsurancePaidBy, 
                    int IsCancelled, 
                    int IsUSBench, 
                    string LastName, 
                    int Manager, 
                    int ModifiedEmpId, 
                    string ProfilePicUrl, 
                    string PassportUrl, 
                    string QuotesText, 
                    string RelievingAttachments, 
                    System.DateTime RelievingDate, 
                    string StartTime, 
                    int Status, 
                    string Title, 
                    System.DateTime TrainingDate, 
                    System.DateTime VisaExpiryDate, 
                    int WeekOffDays, 
                    string WorkEMail, 
                    int WorkLocation, 
                    int Operation) {
            object[] results = this.Invoke("CreateRecEmployee", new object[] {
                        RecEmpId,
                        BackGroundPicUrl,
                        ConfirmationDate,
                        CreatedEmpId,
                        EmployeeCode,
                        EmpRating,
                        EndTime,
                        FirstName,
                        CompanyId,
                        JobDesignation,
                        FkEmpStatus,
                        EmptTypeId,
                        Fk_SalaryType,
                        Fk_TypeOfVisa,
                        InsuranceAmount,
                        InsurancePaidBy,
                        IsCancelled,
                        IsUSBench,
                        LastName,
                        Manager,
                        ModifiedEmpId,
                        ProfilePicUrl,
                        PassportUrl,
                        QuotesText,
                        RelievingAttachments,
                        RelievingDate,
                        StartTime,
                        Status,
                        Title,
                        TrainingDate,
                        VisaExpiryDate,
                        WeekOffDays,
                        WorkEMail,
                        WorkLocation,
                        Operation});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CreateRecEmployeeAsync(
                    int RecEmpId, 
                    string BackGroundPicUrl, 
                    System.DateTime ConfirmationDate, 
                    int CreatedEmpId, 
                    string EmployeeCode, 
                    float EmpRating, 
                    string EndTime, 
                    string FirstName, 
                    int CompanyId, 
                    int JobDesignation, 
                    int FkEmpStatus, 
                    int EmptTypeId, 
                    int Fk_SalaryType, 
                    int Fk_TypeOfVisa, 
                    string InsuranceAmount, 
                    string InsurancePaidBy, 
                    int IsCancelled, 
                    int IsUSBench, 
                    string LastName, 
                    int Manager, 
                    int ModifiedEmpId, 
                    string ProfilePicUrl, 
                    string PassportUrl, 
                    string QuotesText, 
                    string RelievingAttachments, 
                    System.DateTime RelievingDate, 
                    string StartTime, 
                    int Status, 
                    string Title, 
                    System.DateTime TrainingDate, 
                    System.DateTime VisaExpiryDate, 
                    int WeekOffDays, 
                    string WorkEMail, 
                    int WorkLocation, 
                    int Operation) {
            this.CreateRecEmployeeAsync(RecEmpId, BackGroundPicUrl, ConfirmationDate, CreatedEmpId, EmployeeCode, EmpRating, EndTime, FirstName, CompanyId, JobDesignation, FkEmpStatus, EmptTypeId, Fk_SalaryType, Fk_TypeOfVisa, InsuranceAmount, InsurancePaidBy, IsCancelled, IsUSBench, LastName, Manager, ModifiedEmpId, ProfilePicUrl, PassportUrl, QuotesText, RelievingAttachments, RelievingDate, StartTime, Status, Title, TrainingDate, VisaExpiryDate, WeekOffDays, WorkEMail, WorkLocation, Operation, null);
        }
        
        /// <remarks/>
        public void CreateRecEmployeeAsync(
                    int RecEmpId, 
                    string BackGroundPicUrl, 
                    System.DateTime ConfirmationDate, 
                    int CreatedEmpId, 
                    string EmployeeCode, 
                    float EmpRating, 
                    string EndTime, 
                    string FirstName, 
                    int CompanyId, 
                    int JobDesignation, 
                    int FkEmpStatus, 
                    int EmptTypeId, 
                    int Fk_SalaryType, 
                    int Fk_TypeOfVisa, 
                    string InsuranceAmount, 
                    string InsurancePaidBy, 
                    int IsCancelled, 
                    int IsUSBench, 
                    string LastName, 
                    int Manager, 
                    int ModifiedEmpId, 
                    string ProfilePicUrl, 
                    string PassportUrl, 
                    string QuotesText, 
                    string RelievingAttachments, 
                    System.DateTime RelievingDate, 
                    string StartTime, 
                    int Status, 
                    string Title, 
                    System.DateTime TrainingDate, 
                    System.DateTime VisaExpiryDate, 
                    int WeekOffDays, 
                    string WorkEMail, 
                    int WorkLocation, 
                    int Operation, 
                    object userState) {
            if ((this.CreateRecEmployeeOperationCompleted == null)) {
                this.CreateRecEmployeeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateRecEmployeeOperationCompleted);
            }
            this.InvokeAsync("CreateRecEmployee", new object[] {
                        RecEmpId,
                        BackGroundPicUrl,
                        ConfirmationDate,
                        CreatedEmpId,
                        EmployeeCode,
                        EmpRating,
                        EndTime,
                        FirstName,
                        CompanyId,
                        JobDesignation,
                        FkEmpStatus,
                        EmptTypeId,
                        Fk_SalaryType,
                        Fk_TypeOfVisa,
                        InsuranceAmount,
                        InsurancePaidBy,
                        IsCancelled,
                        IsUSBench,
                        LastName,
                        Manager,
                        ModifiedEmpId,
                        ProfilePicUrl,
                        PassportUrl,
                        QuotesText,
                        RelievingAttachments,
                        RelievingDate,
                        StartTime,
                        Status,
                        Title,
                        TrainingDate,
                        VisaExpiryDate,
                        WeekOffDays,
                        WorkEMail,
                        WorkLocation,
                        Operation}, this.CreateRecEmployeeOperationCompleted, userState);
        }
        
        private void OnCreateRecEmployeeOperationCompleted(object arg) {
            if ((this.CreateRecEmployeeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateRecEmployeeCompleted(this, new CreateRecEmployeeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void SaveOpportunityCompletedEventHandler(object sender, SaveOpportunityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveOpportunityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveOpportunityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void SaveReqDocsCompletedEventHandler(object sender, SaveReqDocsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveReqDocsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveReqDocsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void SaveLeadCompletedEventHandler(object sender, SaveLeadCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveLeadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveLeadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void setRecSkillsCompletedEventHandler(object sender, setRecSkillsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class setRecSkillsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal setRecSkillsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void setLeadSkillsCompletedEventHandler(object sender, setLeadSkillsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class setLeadSkillsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal setLeadSkillsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void SaveInterViewCompletedEventHandler(object sender, SaveInterViewCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveInterViewCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveInterViewCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void SaveContractCompletedEventHandler(object sender, SaveContractCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveContractCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveContractCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void SaveContractDocsCompletedEventHandler(object sender, SaveContractDocsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveContractDocsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveContractDocsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void SaveVendorDetailsCompletedEventHandler(object sender, SaveVendorDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveVendorDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveVendorDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void SaveInvoiceDetailsCompletedEventHandler(object sender, SaveInvoiceDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveInvoiceDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveInvoiceDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void SaveInvoiceContactDetailsCompletedEventHandler(object sender, SaveInvoiceContactDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveInvoiceContactDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveInvoiceContactDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void SaveSubmissionsCompletedEventHandler(object sender, SaveSubmissionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveSubmissionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveSubmissionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void SaveSubmittedVisaDocsCompletedEventHandler(object sender, SaveSubmittedVisaDocsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveSubmittedVisaDocsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveSubmittedVisaDocsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void SaveSubmittedDocsCompletedEventHandler(object sender, SaveSubmittedDocsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveSubmittedDocsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveSubmittedDocsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void SaveVisaProcessingCompletedEventHandler(object sender, SaveVisaProcessingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveVisaProcessingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveVisaProcessingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void SaveVisaDateDetailsCompletedEventHandler(object sender, SaveVisaDateDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveVisaDateDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveVisaDateDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void SaveFamilyVisaDetailsCompletedEventHandler(object sender, SaveFamilyVisaDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveFamilyVisaDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveFamilyVisaDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void CreateRecEmployeeCompletedEventHandler(object sender, CreateRecEmployeeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateRecEmployeeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateRecEmployeeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591